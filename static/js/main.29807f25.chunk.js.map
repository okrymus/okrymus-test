{"version":3,"sources":["types.js","api.js","actions/auth.js","components/pages/HomePage.js","components/messages/InlineError.js","components/forms/LoginForm.js","components/pages/LoginPage.js","components/messages/ConfirmEmailMessage.js","components/pages/DashboardPage.js","components/forms/SignupForm.js","components/pages/SignupPage.js","actions/users.js","components/pages/ConfirmationPage.js","components/forms/ForgotPasswordForm.js","components/pages/ForgotPasswordPage.js","components/forms/ResetPasswordForm.js","components/pages/ResetPasswordPage.js","components/routes/UserRoute.js","components/routes/GuestRoute.js","components/nevigation/TopNavigation.js","App.js","serviceWorker.js","rootReducer.js","reducers/user.js","index.js"],"names":["USER_LOGGED_IN","USER_LOGGED_OUT","api","login","credentials","axios","post","then","res","data","user","signup","confirm","token","resetPasswordRequest","email","validateToken","resetPassword","userLoggedIn","type","logout","dispatch","localStorage","removeItem","connect","state","isAuthenticated","actions","react_default","a","createElement","Container","fluid","style","height","color","background","Row","className","Col","xs","sm","alt","src","fontFamily","boxShadow","lineHeight","Link","to","backgroundColor","border","InlineError","_ref","text","LoginForm","password","loading","errors","onChange","e","_this","setState","Object","objectSpread","defineProperty","target","name","value","onSubmit","validate","keys","length","props","submit","catch","err","response","Validator","isEmail","_this$state","this","Form","global","Message","negative","Header","Field","error","htmlFor","id","placeholder","messages_InlineError","Button","primary","React","Component","LoginPage","history","push","forms_LoginForm","okrymusJWT","ConfirmEmailMessage","info","isConfirmed","confirmed","messages_ConfirmEmailMessage","SignupForm","preventDefault","SignupPage","forms_SignupForm","ConfirmationPage","success","_this2","match","params","icon","Icon","Content","ForgotPasswordForm","ForgotPasswordPage","forms_ForgotPasswordForm","ResetPasswordForm","passwordConfirmation","ResetPasswordPage","forms_ResetPasswordForm","component","rest","objectWithoutProperties","Route","assign","render","Redirect","Menu","secondary","pointing","Item","as","position","Dropdown","trigger","Image","avatar","gravatarUrl","onClick","location","nevigation_TopNavigation","path","exact","HomePage","GuestRoute","routes_UserRoute","DashboardPage","Boolean","window","hostname","combineReducers","arguments","undefined","action","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","payload","decode","ReactDOM","BrowserRouter","es","App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"sSAAaA,EAAiB,iBACjBC,EAAkB,mCCChBC,EACP,CACJC,MAAO,SAAAC,GAAW,OAChBC,IAAMC,KAAK,YAAa,CAAEF,gBAAeG,KAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAKC,QAChEC,OAAQ,SAAAD,GAAI,OACVL,IAAMC,KAAK,aAAc,CAAEI,SAAQH,KAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAKC,QAC1DE,QAAS,SAAAC,GAAK,OACZR,IACGC,KAAK,yBAA0B,CAAEO,UACjCN,KAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAKC,QAC1BI,qBAAsB,SAAAC,GAAK,OACzBV,IAAMC,KAAK,mCAAoC,CAAES,WACnDC,cAAe,SAAAH,GAAK,OAAIR,IAAMC,KAAK,2BAA4B,CAAEO,WACjEI,cAAe,SAAAR,GAAI,OAAIJ,IAAMC,KAAK,2BAA4B,CAAEG,WCZvDS,EAAe,SAAAR,GAAI,MAAK,CACnCS,KAAMnB,EACNU,SAaWU,EAAS,kBAAM,SAAAC,GAC1BC,aAAaC,WAAW,cACxBF,EAZkC,CAClCF,KAAMlB,MC6EOuB,kBANf,SAAyBC,GACvB,MAAO,CACLC,kBAAmBD,EAAMf,KAAKG,QAMhC,CAAEO,OAAQO,GAFGH,CAlEE,kBACfI,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,OAAK,EACLC,MAAO,CACLC,OAAQ,QACRC,MAAO,QACPC,WAAY,gDAGdR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACEC,UAAU,wDACVL,MAAO,CAAEC,OAAQ,SAEjBN,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GACfb,EAAAC,EAAAC,cAAA,OACEQ,UAAU,YACVI,IAAI,0BACJC,IAAI,iEAGRf,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEC,GAAI,GACJC,GAAI,EACJR,MAAO,CACLW,WAAY,4BAGdhB,EAAAC,EAAAC,cAAA,MACEG,MAAO,CACLY,UACE,0DACFT,WAAY,qBACZU,WAAY,SALhB,yBAUAlB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,eACbV,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CACEC,GAAG,UACHV,UAAU,yBACVL,MAAO,CACLgB,gBAAiB,UACjBC,OAAQ,SALZ,8HChDKC,EARK,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OAClBzB,EAAAC,EAAAC,cAAA,QAAMG,MAAO,CAAEE,MAAO,YAAckB,ICkFvBC,6MA/Eb7B,MAAQ,CACNhB,KAAM,CACJM,MAAO,GACPwC,SAAU,IAEZC,SAAS,EACTC,OAAQ,MAGVC,SAAW,SAAAC,GAAC,OACVC,EAAKC,SAAS,CACZpD,KAAKqD,OAAAC,EAAA,EAAAD,CAAA,GAAMF,EAAKnC,MAAMhB,KAAlBqD,OAAAE,EAAA,EAAAF,CAAA,GAAyBH,EAAEM,OAAOC,KAAOP,EAAEM,OAAOE,aAG1DC,SAAW,WACT,IAAMX,EAASG,EAAKS,SAAST,EAAKnC,MAAMhB,MACxCmD,EAAKC,SAAS,CAAEJ,WACmB,IAA/BK,OAAOQ,KAAKb,GAAQc,SACtBX,EAAKC,SAAS,CAAEL,SAAS,IACzBI,EAAKY,MACFC,OAAOb,EAAKnC,MAAMhB,MAClBiE,MAAM,SAAAC,GAAG,OACRf,EAAKC,SAAS,CAAEJ,OAAQkB,EAAIC,SAASnE,KAAKgD,OAAQD,SAAS,UAKnEa,SAAW,SAAA5D,GACT,IAAMgD,EAAS,GAGf,OAFKoB,IAAUC,QAAQrE,EAAKM,SAAQ0C,EAAO1C,MAAQ,iBAC9CN,EAAK8C,WAAUE,EAAOF,SAAW,kBAC/BE,2EAGA,IAAAsB,EAC2BC,KAAKvD,MAA/BhB,EADDsE,EACCtE,KAAMgD,EADPsB,EACOtB,OAAQD,EADfuB,EACevB,QAEtB,OACE5B,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAMb,SAAUY,KAAKZ,SAAUZ,QAASA,GACrCC,EAAOyB,QACNtD,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAASC,UAAQ,GACfxD,EAAAC,EAAAC,cAACqD,EAAA,EAAQE,OAAT,6BACAzD,EAAAC,EAAAC,cAAA,SAAI2B,EAAOyB,SAGftD,EAAAC,EAAAC,cAACmD,EAAA,EAAKK,MAAN,CAAYC,QAAS9B,EAAO1C,OAC1Ba,EAAAC,EAAAC,cAAA,SAAO0D,QAAQ,SAAf,SACA5D,EAAAC,EAAAC,cAAA,SACEX,KAAK,QACLsE,GAAG,QACHvB,KAAK,QACLwB,YAAY,sBACZvB,MAAO1D,EAAKM,MACZ2C,SAAUsB,KAAKtB,WAEhBD,EAAO1C,OAASa,EAAAC,EAAAC,cAAC6D,EAAD,CAAatC,KAAMI,EAAO1C,SAE7Ca,EAAAC,EAAAC,cAACmD,EAAA,EAAKK,MAAN,CAAYC,QAAS9B,EAAOF,UAC1B3B,EAAAC,EAAAC,cAAA,SAAO0D,QAAQ,YAAf,YACA5D,EAAAC,EAAAC,cAAA,SACEX,KAAK,WACLsE,GAAG,WACHvB,KAAK,WACLwB,YAAY,iBACZvB,MAAO1D,EAAK8C,SACZG,SAAUsB,KAAKtB,WAEhBD,EAAOF,UAAY3B,EAAAC,EAAAC,cAAC6D,EAAD,CAAatC,KAAMI,EAAOF,YAEhD3B,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CAAQC,SAAO,GAAf,iBAtEgBC,IAAMC,WCCxBC,6MACJvB,OAAS,SAAAhE,GAAI,OACXmD,EAAKY,MAAMrE,MAAMM,GAAMF,KAAK,kBAAMqD,EAAKY,MAAMyB,QAAQC,KAAK,yFAG1D,OACEtE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAACqE,EAAD,CAAW1B,OAAQO,KAAKP,SACxB7C,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAMC,GAAG,oBAAT,4BATgB8C,IAAMC,WAqBfvE,cACb,KACA,CAAErB,MJlBiB,SAAAC,GAAW,OAAI,SAAAiB,GAAQ,OAC1CnB,EAASC,MAAMC,GAAaG,KAAK,SAAAG,GAC/BY,aAAa8E,WAAa1F,EAAKG,MAC/BQ,EAASH,EAAaR,SIaXc,CAGbwE,GCpBaK,EARa,kBAC1BzE,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAASmB,MAAI,GACX1E,EAAAC,EAAAC,cAACqD,EAAA,EAAQE,OAAT,0DCcW7D,kBANf,SAAyBC,GACvB,MAAO,CACL8E,cAAe9E,EAAMf,KAAK8F,YAIfhF,CAdO,SAAA4B,GAAA,IAAGmD,EAAHnD,EAAGmD,YAAH,OACpB3E,EAAAC,EAAAC,cAAA,YAAOyE,GAAe3E,EAAAC,EAAAC,cAAC2E,EAAD,0BC+ETC,6MA9EbjF,MAAQ,CACNhB,KAAM,CACJM,MAAO,GACPwC,SAAU,IAEZC,SAAS,EACTC,OAAQ,MAGVC,SAAW,SAAAC,GAAC,OACVC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACKF,EAAKnC,MADV,CAEEhB,KAAKqD,OAAAC,EAAA,EAAAD,CAAA,GAAMF,EAAKnC,MAAMhB,KAAlBqD,OAAAE,EAAA,EAAAF,CAAA,GAAyBH,EAAEM,OAAOC,KAAOP,EAAEM,OAAOE,cAG1DC,SAAW,SAAAT,GACTA,EAAEgD,iBACF,IAAMlD,EAASG,EAAKS,SAAST,EAAKnC,MAAMhB,MACxCmD,EAAKC,SAAS,CAAEJ,WACmB,IAA/BK,OAAOQ,KAAKb,GAAQc,SACtBX,EAAKC,SAAS,CAAEL,SAAS,IACzBI,EAAKY,MACFC,OAAOb,EAAKnC,MAAMhB,MAClBiE,MAAM,SAAAC,GAAG,OACRf,EAAKC,SAAS,CAAEJ,OAAQkB,EAAIC,SAASnE,KAAKgD,OAAQD,SAAS,UAKnEa,SAAW,SAAA5D,GACT,IAAMgD,EAAS,GAKf,OAHKqB,IAAQrE,EAAKM,SAAQ0C,EAAO1C,MAAQ,iBACpCN,EAAK8C,WAAUE,EAAOF,SAAW,kBAE/BE,2EAGA,IAAAsB,EAC2BC,KAAKvD,MAA/BhB,EADDsE,EACCtE,KAAMgD,EADPsB,EACOtB,OAAQD,EADfuB,EACevB,QAEtB,OACE5B,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAMb,SAAUY,KAAKZ,SAAUZ,QAASA,GACtC5B,EAAAC,EAAAC,cAACmD,EAAA,EAAKK,MAAN,CAAYC,QAAS9B,EAAO1C,OAC1Ba,EAAAC,EAAAC,cAAA,SAAO0D,QAAQ,SAAf,SACA5D,EAAAC,EAAAC,cAAA,SACEX,KAAK,QACLsE,GAAG,QACHvB,KAAK,QACLwB,YAAY,kBACZvB,MAAO1D,EAAKM,MACZ2C,SAAUsB,KAAKtB,WAEhBD,EAAO1C,OAASa,EAAAC,EAAAC,cAAC6D,EAAD,CAAatC,KAAMI,EAAO1C,SAG7Ca,EAAAC,EAAAC,cAACmD,EAAA,EAAKK,MAAN,CAAYC,QAAS9B,EAAOF,UAC1B3B,EAAAC,EAAAC,cAAA,SAAO0D,QAAQ,YAAf,YACA5D,EAAAC,EAAAC,cAAA,SACEX,KAAK,WACLsE,GAAG,WACHvB,KAAK,WACLC,MAAO1D,EAAK8C,SACZG,SAAUsB,KAAKtB,WAEhBD,EAAOF,UAAY3B,EAAAC,EAAAC,cAAC6D,EAAD,CAAatC,KAAMI,EAAOF,YAGhD3B,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CAAQC,SAAO,GAAf,mBArEiBC,IAAMC,WCAzBa,6MACJnC,OAAS,SAAAhE,GAAI,OACXmD,EAAKY,MAAM7D,OAAOF,GAAMF,KAAK,kBAAMqD,EAAKY,MAAMyB,QAAQC,KAAK,yFAG3D,OACEtE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC+E,EAAD,CAAYpC,OAAQO,KAAKP,iBAPRqB,IAAMC,WAoBhBvE,cACb,KACA,CAAEb,OCzBkB,SAAAF,GAAI,OAAI,SAAAY,GAAQ,OACpCnB,EAASS,OAAOF,GAAMF,KAAK,SAAAG,GACzBY,aAAa8E,WAAa1F,EAAKG,MAC/BQ,EAASH,EAAaR,SDoBXc,CAGboF,YEtBIE,6MACJrF,MAAQ,CACN+B,SAAS,EACTuD,SAAS,sFAGS,IAAAC,EAAAhC,KAClBA,KAAKR,MACF5D,QAAQoE,KAAKR,MAAMyC,MAAMC,OAAOrG,OAChCN,KAAK,kBAAMyG,EAAKnD,SAAS,CAAEL,SAAS,EAAOuD,SAAS,MACpDrC,MAAM,kBAAMsC,EAAKnD,SAAS,CAAEL,SAAS,EAAOuD,SAAS,uCAGjD,IAAAhC,EACsBC,KAAKvD,MAA1B+B,EADDuB,EACCvB,QAASuD,EADVhC,EACUgC,QAEjB,OACEnF,EAAAC,EAAAC,cAAA,WACG0B,GACC5B,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAASgC,MAAI,GACXvF,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAMlD,KAAK,iBAAiBV,SAAO,IACnC5B,EAAAC,EAAAC,cAACqD,EAAA,EAAQE,OAAT,gCAIF7B,GAAWuD,GACXnF,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAS4B,SAAO,EAACI,MAAI,GACnBvF,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAMlD,KAAK,cACXtC,EAAAC,EAAAC,cAACqD,EAAA,EAAQkC,QAAT,KACEzF,EAAAC,EAAAC,cAACqD,EAAA,EAAQE,OAAT,mDAGAzD,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAMC,GAAG,cAAT,2BAKJQ,IAAYuD,GACZnF,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAASC,UAAQ,EAAC+B,MAAI,GACpBvF,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAMlD,KAAK,iBACXtC,EAAAC,EAAAC,cAACqD,EAAA,EAAQkC,QAAT,KACEzF,EAAAC,EAAAC,cAACqD,EAAA,EAAQE,OAAT,iDAzCiBS,IAAMC,WA2DtBvE,cACb,KACA,CAAEZ,QV7CmB,SAAAC,GAAK,OAAI,SAAAQ,GAAQ,OACtCnB,EAASU,QAAQC,GAAON,KAAK,SAAAG,GAC3BY,aAAa8E,WAAa1F,EAAKG,MAC/BQ,EAASH,EAAaR,SUwCXc,CAGbsF,GCAaQ,6MA9Db7F,MAAQ,CACNhB,KAAM,CACJM,MAAO,IAETyC,SAAS,EACTC,OAAQ,MAGVC,SAAW,SAAAC,GAAC,OACVC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACKF,EAAKnC,MADV,CAEEhB,KAAKqD,OAAAC,EAAA,EAAAD,CAAA,GAAMF,EAAKnC,MAAMhB,KAAlBqD,OAAAE,EAAA,EAAAF,CAAA,GAAyBH,EAAEM,OAAOC,KAAOP,EAAEM,OAAOE,cAG1DC,SAAW,SAAAT,GACTA,EAAEgD,iBACF,IAAMlD,EAASG,EAAKS,SAAST,EAAKnC,MAAMhB,MACxCmD,EAAKC,SAAS,CAAEJ,WACmB,IAA/BK,OAAOQ,KAAKb,GAAQc,SACtBX,EAAKC,SAAS,CAAEL,SAAS,IACzBI,EAAKY,MACFC,OAAOb,EAAKnC,MAAMhB,MAClBiE,MAAM,SAAAC,GAAG,OACRf,EAAKC,SAAS,CAAEJ,OAAQkB,EAAIC,SAASnE,KAAKgD,OAAQD,SAAS,UAKnEa,SAAW,SAAA5D,GACT,IAAMgD,EAAS,GAEf,OADKqB,IAAQrE,EAAKM,SAAQ0C,EAAO1C,MAAQ,iBAClC0C,2EAGA,IAAAsB,EAC2BC,KAAKvD,MAA/BgC,EADDsB,EACCtB,OAAQhD,EADTsE,EACStE,KAAM+C,EADfuB,EACevB,QAEtB,OACE5B,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAMb,SAAUY,KAAKZ,SAAUZ,QAASA,KACnCC,EAAOyB,QAAUtD,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAASC,UAAQ,GAAE3B,EAAOyB,QAC9CtD,EAAAC,EAAAC,cAACmD,EAAA,EAAKK,MAAN,CAAYC,QAAS9B,EAAO1C,OAC1Ba,EAAAC,EAAAC,cAAA,SAAO0D,QAAQ,SAAf,SACA5D,EAAAC,EAAAC,cAAA,SACEX,KAAK,QACLsE,GAAG,QACHvB,KAAK,QACLwB,YAAY,QACZvB,MAAO1D,EAAKM,MACZ2C,SAAUsB,KAAKtB,WAEhBD,EAAO1C,OAASa,EAAAC,EAAAC,cAAC6D,EAAD,CAAatC,KAAMI,EAAO1C,SAE7Ca,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CAAQC,SAAO,GAAf,8BArDyBC,IAAMC,WCCjCwB,8MACJ9F,MAAQ,CACNsF,SAAS,KAGXtC,OAAS,SAAAhE,GAAI,OACXmD,EAAKY,MACF1D,qBAAqBL,GACrBF,KAAK,kBAAMqD,EAAKC,SAAS,CAAEkD,SAAS,+EAGvC,OACEnF,EAAAC,EAAAC,cAAA,WACGkD,KAAKvD,MAAMsF,QACVnF,EAAAC,EAAAC,cAACqD,EAAA,EAAD,6BAEAvD,EAAAC,EAAAC,cAAC0F,EAAD,CAAoB/C,OAAQO,KAAKP,iBAhBVqB,IAAMC,WA2BxBvE,eACb,KACA,CAAEV,qBZPgC,SAAAsC,GAAA,IAAGrC,EAAHqC,EAAGrC,MAAH,OAAe,kBACjDb,EAASY,qBAAqBC,MYIjBS,CAGb+F,ICqDaE,8MApFbhG,MAAQ,CACNhB,KAAM,CACJI,MAAO+C,EAAKY,MAAM3D,MAClB0C,SAAU,GACVmE,qBAAsB,IAExBlE,SAAS,EACTC,OAAQ,MAGVC,SAAW,SAAAC,GAAC,OACVC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACKF,EAAKnC,MADV,CAEEhB,KAAKqD,OAAAC,EAAA,EAAAD,CAAA,GAAMF,EAAKnC,MAAMhB,KAAlBqD,OAAAE,EAAA,EAAAF,CAAA,GAAyBH,EAAEM,OAAOC,KAAOP,EAAEM,OAAOE,cAG1DC,SAAW,SAAAT,GACTA,EAAEgD,iBACF,IAAMlD,EAASG,EAAKS,SAAST,EAAKnC,MAAMhB,MACxCmD,EAAKC,SAAS,CAAEJ,WACmB,IAA/BK,OAAOQ,KAAKb,GAAQc,SACtBX,EAAKC,SAAS,CAAEL,SAAS,IACzBI,EAAKY,MACFC,OAAOb,EAAKnC,MAAMhB,MAClBiE,MAAM,SAAAC,GAAG,OACRf,EAAKC,SAAS,CAAEJ,OAAQkB,EAAIC,SAASnE,KAAKgD,OAAQD,SAAS,UAKnEa,SAAW,SAAA5D,GACT,IAAMgD,EAAS,GAIf,OAHKhD,EAAK8C,WAAUE,EAAOF,SAAW,kBAClC9C,EAAK8C,WAAa9C,EAAKiH,uBACzBjE,EAAOF,SAAW,wBACbE,2EAGA,IAAAsB,EAC2BC,KAAKvD,MAA/BgC,EADDsB,EACCtB,OAAQhD,EADTsE,EACStE,KAAM+C,EADfuB,EACevB,QAEtB,OACE5B,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAMb,SAAUY,KAAKZ,SAAUZ,QAASA,GACtC5B,EAAAC,EAAAC,cAACmD,EAAA,EAAKK,MAAN,CAAYC,QAAS9B,EAAOF,UAC1B3B,EAAAC,EAAAC,cAAA,SAAO0D,QAAQ,YAAf,gBACA5D,EAAAC,EAAAC,cAAA,SACEX,KAAK,WACLsE,GAAG,WACHvB,KAAK,WACLwB,YAAY,oBACZvB,MAAO1D,EAAK8C,SACZG,SAAUsB,KAAKtB,WAEhBD,EAAOF,UAAY3B,EAAAC,EAAAC,cAAC6D,EAAD,CAAatC,KAAMI,EAAOF,YAGhD3B,EAAAC,EAAAC,cAACmD,EAAA,EAAKK,MAAN,CAAYC,QAAS9B,EAAOiE,sBAC1B9F,EAAAC,EAAAC,cAAA,SAAO0D,QAAQ,wBAAf,6BAGA5D,EAAAC,EAAAC,cAAA,SACEX,KAAK,WACLsE,GAAG,uBACHvB,KAAK,uBACLwB,YAAY,wBACZvB,MAAO1D,EAAKiH,qBACZhE,SAAUsB,KAAKtB,WAEhBD,EAAOiE,sBACN9F,EAAAC,EAAAC,cAAC6D,EAAD,CAAatC,KAAMI,EAAOiE,wBAI9B9F,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CAAQC,SAAO,GAAf,iBA1EwBC,IAAMC,WCEhC4B,8MACJlG,MAAQ,CACN+B,SAAS,EACTuD,SAAS,KAUXtC,OAAS,SAAAhE,GAAI,OACXmD,EAAKY,MACFvD,cAAcR,GACdF,KAAK,kBAAMqD,EAAKY,MAAMyB,QAAQC,KAAK,gGAVpB,IAAAc,EAAAhC,KAClBA,KAAKR,MACFxD,cAAcgE,KAAKR,MAAMyC,MAAMC,OAAOrG,OACtCN,KAAK,kBAAMyG,EAAKnD,SAAS,CAAEL,SAAS,EAAOuD,SAAS,MACpDrC,MAAM,kBAAMsC,EAAKnD,SAAS,CAAEL,SAAS,EAAOuD,SAAS,uCAQjD,IAAAhC,EACsBC,KAAKvD,MAA1B+B,EADDuB,EACCvB,QAASuD,EADVhC,EACUgC,QACXlG,EAAQmE,KAAKR,MAAMyC,MAAMC,OAAOrG,MAEtC,OACEe,EAAAC,EAAAC,cAAA,WACG0B,GAAW5B,EAAAC,EAAAC,cAACqD,EAAA,EAAD,iBACV3B,GAAWuD,GACXnF,EAAAC,EAAAC,cAAC8F,GAAD,CAAmBnD,OAAQO,KAAKP,OAAQ5D,MAAOA,KAE/C2C,IAAYuD,GAAWnF,EAAAC,EAAAC,cAACqD,EAAA,EAAD,8BA5BDW,IAAMC,WA+CvBvE,eACb,KACA,CAAER,cdxByB,SAAAH,GAAK,OAAI,kBAAMX,EAASc,cAAcH,KcwBhDI,cdtBU,SAAAR,GAAI,OAAI,kBAAMP,EAASe,cAAcR,McoBnDe,CAGbmG,wBChCanG,mBANf,SAAyBC,GACvB,MAAO,CACLC,kBAAmBD,EAAMf,KAAKG,QAInBW,CApBG,SAAA4B,GAAA,IAAG1B,EAAH0B,EAAG1B,gBAA4BqE,EAA/B3C,EAAoByE,UAAyBC,EAA7ChE,OAAAiE,GAAA,EAAAjE,CAAAV,EAAA,wCAChBxB,EAAAC,EAAAC,cAACkG,EAAA,EAADlE,OAAAmE,OAAA,GACMH,EADN,CAEEI,OAAQ,SAAA1D,GAAK,OACX9C,EAAkBE,EAAAC,EAAAC,cAACiE,EAAcvB,GAAY5C,EAAAC,EAAAC,cAACqG,GAAA,EAAD,CAAUnF,GAAG,YCgBjDxB,mBANf,SAAyBC,GACvB,MAAO,CACLC,kBAAmBD,EAAMf,KAAKG,QAInBW,CApBG,SAAA4B,GAAA,IAAG1B,EAAH0B,EAAG1B,gBAA4BqE,EAA/B3C,EAAoByE,UAAyBC,EAA7ChE,OAAAiE,GAAA,EAAAjE,CAAAV,EAAA,wCAChBxB,EAAAC,EAAAC,cAACkG,EAAA,EAADlE,OAAAmE,OAAA,GACMH,EADN,CAEEI,OAAQ,SAAA1D,GAAK,OACV9C,EAA6CE,EAAAC,EAAAC,cAACqG,GAAA,EAAD,CAAUnF,GAAG,eAAxCpB,EAAAC,EAAAC,cAACiE,EAAcvB,4DC2BzBhD,mBANf,SAAyBC,GACvB,MAAO,CACLf,KAAMe,EAAMf,OAMd,CAAEU,OAAQO,GAFGH,CA5BO,SAAA4B,GAAA,IAAG1C,EAAH0C,EAAG1C,KAAMU,EAATgC,EAAShC,OAAT,OACpBQ,EAAAC,EAAAC,cAACsG,GAAA,EAAD,CAAMC,WAAS,EAACC,UAAQ,GACtB1G,EAAAC,EAAAC,cAACsG,GAAA,EAAKG,KAAN,CAAWC,GAAIzF,IAAMC,GAAG,cAAxB,aAGApB,EAAAC,EAAAC,cAACsG,GAAA,EAAKA,KAAN,CAAWK,SAAS,SAClB7G,EAAAC,EAAAC,cAAC4G,GAAA,EAAD,CAAUC,QAAS/G,EAAAC,EAAAC,cAAC8G,GAAA,EAAD,CAAOC,QAAM,EAAClG,IAAKmG,KAAYpI,EAAKK,UACrDa,EAAAC,EAAAC,cAAC4G,GAAA,EAASN,KAAV,KACExG,EAAAC,EAAAC,cAAC4G,GAAA,EAASH,KAAV,CAAeQ,QAAS,kBAAM3H,MAA9B,gBCkDKI,mBANf,SAAyBC,GACvB,MAAO,CACLC,kBAAmBD,EAAMf,KAAKK,QAInBS,CAnDH,SAAA4B,GAAA,IAAG4F,EAAH5F,EAAG4F,SAAUtH,EAAb0B,EAAa1B,gBAAb,OACVE,EAAAC,EAAAC,cAAA,WACGJ,GAAmBE,EAAAC,EAAAC,cAACmH,GAAD,MACpBrH,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAOgB,SAAUA,EAAUE,KAAK,IAAIC,OAAK,EAACtB,UAAWuB,IACrDxH,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CACEgB,SAAUA,EACVE,KAAK,uBACLC,OAAK,EACLtB,UAAWf,IAEblF,EAAAC,EAAAC,cAACuH,GAAD,CAAYL,SAAUA,EAAUE,KAAK,SAASC,OAAK,EAACtB,UAAW7B,IAC/DpE,EAAAC,EAAAC,cAACuH,GAAD,CACEL,SAAUA,EACVE,KAAK,UACLC,OAAK,EACLtB,UAAWjB,IAEbhF,EAAAC,EAAAC,cAACuH,GAAD,CACEL,SAAUA,EACVE,KAAK,mBACLC,OAAK,EACLtB,UAAWN,KAEb3F,EAAAC,EAAAC,cAACuH,GAAD,CACEL,SAAUA,EACVE,KAAK,yBACLC,OAAK,EACLtB,UAAWF,KAEb/F,EAAAC,EAAAC,cAACwH,GAAD,CACEN,SAAUA,EACVE,KAAK,aACLC,OAAK,EACLtB,UAAW0B,OCpCGC,QACW,cAA7BC,OAAOT,SAASU,UAEe,UAA7BD,OAAOT,SAASU,UAEhBD,OAAOT,SAASU,SAASzC,MACvB,2DCdS0C,iCAAgB,CAC7BjJ,KCHa,WAAuC,IAAzBe,EAAyBmI,UAAArF,OAAA,QAAAsF,IAAAD,UAAA,GAAAA,UAAA,GAAjB,GAAIE,EAAaF,UAAArF,OAAA,QAAAsF,IAAAD,UAAA,GAAAA,UAAA,GAAJ,GAChD,OAAQE,EAAO3I,MACb,KAAKnB,EACH,OAAO8J,EAAOpJ,KAChB,KAAKT,EACH,MAAO,GACT,QACE,OAAOwB,MCMPsI,GAAQC,sBACZC,GACAC,8BAAoBC,0BAAgBC,OAGtC,GAAI9I,aAAa8E,WAAY,CAC3B,IAAMiE,GAAUC,IAAOhJ,aAAa8E,YAC9B1F,GAAO,CACXG,MAAOS,aAAa8E,WACpBrF,MAAOsJ,GAAQtJ,MACfyF,UAAW6D,GAAQ7D,WAErBuD,GAAM1I,SAASH,EAAaR,KAG9B6J,IAASrC,OACPtG,EAAAC,EAAAC,cAAC0I,EAAA,EAAD,KACE5I,EAAAC,EAAAC,cAAC2I,EAAA,EAAD,CAAUV,MAAOA,IACfnI,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAOH,UAAW6C,OAGtBC,SAASC,eAAe,SH6FpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMxK,KAAK,SAAAyK,GACjCA,EAAaC","file":"static/js/main.29807f25.chunk.js","sourcesContent":["export const USER_LOGGED_IN = \"USER_LOGGED_IN\";\nexport const USER_LOGGED_OUT = \"USER_LOGGED_OUT\";\n","import axios from \"axios\";\n\nexport default {\n  user: {\n    login: credentials =>\n      axios.post(\"/api/auth\", { credentials }).then(res => res.data.user),\n    signup: user =>\n      axios.post(\"/api/users\", { user }).then(res => res.data.user),\n    confirm: token =>\n      axios\n        .post(\"/api/auth/confirmation\", { token })\n        .then(res => res.data.user),\n    resetPasswordRequest: email =>\n      axios.post(\"/api/auth/reset_password_request\", { email }),\n    validateToken: token => axios.post(\"/api/auth/validate_token\", { token }),\n    resetPassword: data => axios.post(\"/api/auth/reset_password\", { data })\n  }\n};\n","import { USER_LOGGED_IN, USER_LOGGED_OUT } from \"../types\";\nimport api from \"../api\";\n\nexport const userLoggedIn = user => ({\n  type: USER_LOGGED_IN,\n  user\n});\n\nexport const userLoggedOut = () => ({\n  type: USER_LOGGED_OUT\n});\n\nexport const login = credentials => dispatch =>\n  api.user.login(credentials).then(user => {\n    localStorage.okrymusJWT = user.token;\n    dispatch(userLoggedIn(user));\n  });\n\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"okrymusJWT\");\n  dispatch(userLoggedOut());\n};\n\nexport const confirm = token => dispatch =>\n  api.user.confirm(token).then(user => {\n    localStorage.okrymusJWT = user.token;\n    dispatch(userLoggedIn(user));\n  });\n\nexport const resetPasswordRequest = ({ email }) => () =>\n  api.user.resetPasswordRequest(email);\n\nexport const validateToken = token => () => api.user.validateToken(token);\n\nexport const resetPassword = data => () => api.user.resetPassword(data);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions/auth\";\n\n// const HomePage = ({ isAuthenticated, logout }) => (\n//   <div>\n//     <h1>Home Page</h1>\n//     {isAuthenticated ? (\n//       <button onClick={() => logout()}>Logout</button>\n//     ) : (\n//       <div>\n//         <Link to=\"/login\">Login</Link> or <Link to=\"/signup\">Sign Up</Link>\n//       </div>\n//     )}\n//   </div>\n// );\n\nconst HomePage = () => (\n  <Container\n    fluid\n    style={{\n      height: \"100vh\",\n      color: \"white\",\n      background: \"linear-gradient(to right, #692022, #1b1819)\"\n    }}\n  >\n    <Row\n      className=\"align-items-center justify-content-center text-center\"\n      style={{ height: \"100%\" }}\n    >\n      <Col xs={12} sm={6}>\n        <img\n          className=\"img-fluid\"\n          alt=\"Adventurers League Logo\"\n          src=\"http://media.wizards.com/images/dnd/playevents/DnD_ADVL.png\"\n        />\n      </Col>\n      <Col\n        xs={12}\n        sm={6}\n        style={{\n          fontFamily: \"'Open Sans', sans-serif\"\n        }}\n      >\n        <h1\n          style={{\n            boxShadow:\n              \"6px 0 0 rgba(20,12,10, .7), -6px 0 0 rgba(20,12,10, .7)\",\n            background: \"rgba(20,12,10, .7)\",\n            lineHeight: \"3rem\"\n          }}\n        >\n          BECOME AN ADVENTURER!\n        </h1>\n        <br />\n        <div className=\"text-center\">\n          <Link\n            to=\"/signup\"\n            className=\"btn btn-primary btn-lg\"\n            style={{\n              backgroundColor: \"#9c0b0e\",\n              border: \"none\"\n            }}\n          >\n            JOIN THE PARTY!\n          </Link>\n        </div>\n      </Col>\n    </Row>\n  </Container>\n);\n\nHomePage.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  logout: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    isAuthenticated: !!state.user.token\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { logout: actions.logout }\n)(HomePage);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst InlineError = ({ text }) => (\n  <span style={{ color: \"#ae5856\" }}>{text}</span>\n);\n\nInlineError.propTypes = {\n  text: PropTypes.string.isRequired\n};\n\nexport default InlineError;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Form, Button, Message } from \"semantic-ui-react\";\nimport Validator from \"validator\";\nimport InlineError from \"../messages/InlineError\";\n\nclass LoginForm extends React.Component {\n  state = {\n    data: {\n      email: \"\",\n      password: \"\"\n    },\n    loading: false,\n    errors: {}\n  };\n\n  onChange = e =>\n    this.setState({\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n\n  onSubmit = () => {\n    const errors = this.validate(this.state.data);\n    this.setState({ errors });\n    if (Object.keys(errors).length === 0) {\n      this.setState({ loading: true });\n      this.props\n        .submit(this.state.data)\n        .catch(err =>\n          this.setState({ errors: err.response.data.errors, loading: false })\n        );\n    }\n  };\n\n  validate = data => {\n    const errors = {};\n    if (!Validator.isEmail(data.email)) errors.email = \"Invalid email\";\n    if (!data.password) errors.password = \"Can't be blank\";\n    return errors;\n  };\n\n  render() {\n    const { data, errors, loading } = this.state;\n\n    return (\n      <Form onSubmit={this.onSubmit} loading={loading}>\n        {errors.global && (\n          <Message negative>\n            <Message.Header>Something went wrong</Message.Header>\n            <p>{errors.global}</p>\n          </Message>\n        )}\n        <Form.Field error={!!errors.email}>\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            placeholder=\"example@example.com\"\n            value={data.email}\n            onChange={this.onChange}\n          />\n          {errors.email && <InlineError text={errors.email} />}\n        </Form.Field>\n        <Form.Field error={!!errors.password}>\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            placeholder=\"Make it secure\"\n            value={data.password}\n            onChange={this.onChange}\n          />\n          {errors.password && <InlineError text={errors.password} />}\n        </Form.Field>\n        <Button primary>Login</Button>\n      </Form>\n    );\n  }\n}\n\nLoginForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nexport default LoginForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport LoginForm from \"../forms/LoginForm\";\nimport { login } from \"../../actions/auth\";\n\nclass LoginPage extends React.Component {\n  submit = data =>\n    this.props.login(data).then(() => this.props.history.push(\"/dashboard\"));\n\n  render() {\n    return (\n      <div>\n        <h1>Login Page</h1>\n        <LoginForm submit={this.submit} />\n        <Link to=\"/forgot_password\">Forgot Password?</Link>\n      </div>\n    );\n  }\n}\n\nLoginPage.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  login: PropTypes.func.isRequired\n};\nexport default connect(\n  null,\n  { login }\n)(LoginPage);\n","import React from \"react\";\nimport { Message } from \"semantic-ui-react\";\n\nconst ConfirmEmailMessage = () => (\n  <Message info>\n    <Message.Header>\n      Please, verify your email to unlock awesomeness\n    </Message.Header>\n  </Message>\n);\n\nexport default ConfirmEmailMessage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport ConfirmEmailMessage from \"../messages/ConfirmEmailMessage\";\n\nconst DashboardPage = ({ isConfirmed }) => (\n  <div>{!isConfirmed && <ConfirmEmailMessage />}</div>\n);\n\nDashboardPage.propTypes = {\n  isConfirmed: PropTypes.bool.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    isConfirmed: !!state.user.confirmed\n  };\n}\n\nexport default connect(mapStateToProps)(DashboardPage);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Form, Button } from \"semantic-ui-react\";\nimport isEmail from \"validator/lib/isEmail\";\nimport InlineError from \"../messages/InlineError\";\n\nclass SignupForm extends React.Component {\n  state = {\n    data: {\n      email: \"\",\n      password: \"\"\n    },\n    loading: false,\n    errors: {}\n  };\n\n  onChange = e =>\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n\n  onSubmit = e => {\n    e.preventDefault();\n    const errors = this.validate(this.state.data);\n    this.setState({ errors });\n    if (Object.keys(errors).length === 0) {\n      this.setState({ loading: true });\n      this.props\n        .submit(this.state.data)\n        .catch(err =>\n          this.setState({ errors: err.response.data.errors, loading: false })\n        );\n    }\n  };\n\n  validate = data => {\n    const errors = {};\n\n    if (!isEmail(data.email)) errors.email = \"Invalid email\";\n    if (!data.password) errors.password = \"Can't be blank\";\n\n    return errors;\n  };\n\n  render() {\n    const { data, errors, loading } = this.state;\n\n    return (\n      <Form onSubmit={this.onSubmit} loading={loading}>\n        <Form.Field error={!!errors.email}>\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            placeholder=\"email@email.com\"\n            value={data.email}\n            onChange={this.onChange}\n          />\n          {errors.email && <InlineError text={errors.email} />}\n        </Form.Field>\n\n        <Form.Field error={!!errors.password}>\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            value={data.password}\n            onChange={this.onChange}\n          />\n          {errors.password && <InlineError text={errors.password} />}\n        </Form.Field>\n\n        <Button primary>Sign Up</Button>\n      </Form>\n    );\n  }\n}\n\nSignupForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nexport default SignupForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport SignupForm from \"../forms/SignupForm\";\nimport { signup } from \"../../actions/users\";\n\nclass SignupPage extends React.Component {\n  submit = data =>\n    this.props.signup(data).then(() => this.props.history.push(\"/dashboard\"));\n\n  render() {\n    return (\n      <div>\n        <SignupForm submit={this.submit} />\n      </div>\n    );\n  }\n}\n\nSignupPage.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  signup: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { signup }\n)(SignupPage);\n","import api from \"../api\";\nimport { userLoggedIn } from \"./auth\";\n\nexport const signup = data => dispatch =>\n  api.user.signup(data).then(user => {\n    localStorage.okrymusJWT = user.token;\n    dispatch(userLoggedIn(user));\n  });\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Message, Icon } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { confirm } from \"../../actions/auth\";\n\nclass ConfirmationPage extends React.Component {\n  state = {\n    loading: true,\n    success: false\n  };\n\n  componentDidMount() {\n    this.props\n      .confirm(this.props.match.params.token)\n      .then(() => this.setState({ loading: false, success: true }))\n      .catch(() => this.setState({ loading: false, success: false }));\n  }\n\n  render() {\n    const { loading, success } = this.state;\n\n    return (\n      <div>\n        {loading && (\n          <Message icon>\n            <Icon name=\"circle notched\" loading />\n            <Message.Header>Validating your email</Message.Header>\n          </Message>\n        )}\n\n        {!loading && success && (\n          <Message success icon>\n            <Icon name=\"checkmark\" />\n            <Message.Content>\n              <Message.Header>\n                Thank you. Your account has been verified.\n              </Message.Header>\n              <Link to=\"/dashboard\">Go to your dashboard</Link>\n            </Message.Content>\n          </Message>\n        )}\n\n        {!loading && !success && (\n          <Message negative icon>\n            <Icon name=\"warning sign\" />\n            <Message.Content>\n              <Message.Header>Ooops. Invalid token it seems.</Message.Header>\n            </Message.Content>\n          </Message>\n        )}\n      </div>\n    );\n  }\n}\n\nConfirmationPage.propTypes = {\n  confirm: PropTypes.func.isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      token: PropTypes.string.isRequired\n    }).isRequired\n  }).isRequired\n};\n\nexport default connect(\n  null,\n  { confirm }\n)(ConfirmationPage);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Form, Button, Message } from \"semantic-ui-react\";\nimport isEmail from \"validator/lib/isEmail\";\nimport InlineError from \"../messages/InlineError\";\n\nclass ForgotPasswordForm extends React.Component {\n  state = {\n    data: {\n      email: \"\"\n    },\n    loading: false,\n    errors: {}\n  };\n\n  onChange = e =>\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n\n  onSubmit = e => {\n    e.preventDefault();\n    const errors = this.validate(this.state.data);\n    this.setState({ errors });\n    if (Object.keys(errors).length === 0) {\n      this.setState({ loading: true });\n      this.props\n        .submit(this.state.data)\n        .catch(err =>\n          this.setState({ errors: err.response.data.errors, loading: false })\n        );\n    }\n  };\n\n  validate = data => {\n    const errors = {};\n    if (!isEmail(data.email)) errors.email = \"Invalid email\";\n    return errors;\n  };\n\n  render() {\n    const { errors, data, loading } = this.state;\n\n    return (\n      <Form onSubmit={this.onSubmit} loading={loading}>\n        {!!errors.global && <Message negative>{errors.global}</Message>}\n        <Form.Field error={!!errors.email}>\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            placeholder=\"email\"\n            value={data.email}\n            onChange={this.onChange}\n          />\n          {errors.email && <InlineError text={errors.email} />}\n        </Form.Field>\n        <Button primary>ForgotPasswordForm</Button>\n      </Form>\n    );\n  }\n}\n\nForgotPasswordForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nexport default ForgotPasswordForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Message } from \"semantic-ui-react\";\nimport ForgotPasswordForm from \"../forms/ForgotPasswordForm\";\nimport { resetPasswordRequest } from \"../../actions/auth\";\n\nclass ForgotPasswordPage extends React.Component {\n  state = {\n    success: false\n  };\n\n  submit = data =>\n    this.props\n      .resetPasswordRequest(data)\n      .then(() => this.setState({ success: true }));\n\n  render() {\n    return (\n      <div>\n        {this.state.success ? (\n          <Message>Email has been sent.</Message>\n        ) : (\n          <ForgotPasswordForm submit={this.submit} />\n        )}\n      </div>\n    );\n  }\n}\n\nForgotPasswordPage.propTypes = {\n  resetPasswordRequest: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { resetPasswordRequest }\n)(ForgotPasswordPage);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Form, Button } from \"semantic-ui-react\";\nimport InlineError from \"../messages/InlineError\";\n\nclass ResetPasswordForm extends React.Component {\n  state = {\n    data: {\n      token: this.props.token,\n      password: \"\",\n      passwordConfirmation: \"\"\n    },\n    loading: false,\n    errors: {}\n  };\n\n  onChange = e =>\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n\n  onSubmit = e => {\n    e.preventDefault();\n    const errors = this.validate(this.state.data);\n    this.setState({ errors });\n    if (Object.keys(errors).length === 0) {\n      this.setState({ loading: true });\n      this.props\n        .submit(this.state.data)\n        .catch(err =>\n          this.setState({ errors: err.response.data.errors, loading: false })\n        );\n    }\n  };\n\n  validate = data => {\n    const errors = {};\n    if (!data.password) errors.password = \"Can't be blank\";\n    if (data.password !== data.passwordConfirmation)\n      errors.password = \"Passwords must match\";\n    return errors;\n  };\n\n  render() {\n    const { errors, data, loading } = this.state;\n\n    return (\n      <Form onSubmit={this.onSubmit} loading={loading}>\n        <Form.Field error={!!errors.password}>\n          <label htmlFor=\"password\">New Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            placeholder=\"your new password\"\n            value={data.password}\n            onChange={this.onChange}\n          />\n          {errors.password && <InlineError text={errors.password} />}\n        </Form.Field>\n\n        <Form.Field error={!!errors.passwordConfirmation}>\n          <label htmlFor=\"passwordConfirmation\">\n            Confirm your new password\n          </label>\n          <input\n            type=\"password\"\n            id=\"passwordConfirmation\"\n            name=\"passwordConfirmation\"\n            placeholder=\"type it again, please\"\n            value={data.passwordConfirmation}\n            onChange={this.onChange}\n          />\n          {errors.passwordConfirmation && (\n            <InlineError text={errors.passwordConfirmation} />\n          )}\n        </Form.Field>\n\n        <Button primary>Reset</Button>\n      </Form>\n    );\n  }\n}\n\nResetPasswordForm.propTypes = {\n  submit: PropTypes.func.isRequired,\n  token: PropTypes.string.isRequired\n};\n\nexport default ResetPasswordForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Message } from \"semantic-ui-react\";\nimport ResetPasswordForm from \"../forms/ResetPasswordForm\";\nimport { validateToken, resetPassword } from \"../../actions/auth\";\n\nclass ResetPasswordPage extends React.Component {\n  state = {\n    loading: true,\n    success: false\n  };\n\n  componentDidMount() {\n    this.props\n      .validateToken(this.props.match.params.token)\n      .then(() => this.setState({ loading: false, success: true }))\n      .catch(() => this.setState({ loading: false, success: false }));\n  }\n\n  submit = data =>\n    this.props\n      .resetPassword(data)\n      .then(() => this.props.history.push(\"/login\"));\n\n  render() {\n    const { loading, success } = this.state;\n    const token = this.props.match.params.token;\n\n    return (\n      <div>\n        {loading && <Message>Loading</Message>}\n        {!loading && success && (\n          <ResetPasswordForm submit={this.submit} token={token} />\n        )}\n        {!loading && !success && <Message>Invalid Token</Message>}\n      </div>\n    );\n  }\n}\n\nResetPasswordPage.propTypes = {\n  validateToken: PropTypes.func.isRequired,\n  resetPassword: PropTypes.func.isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      token: PropTypes.string.isRequired\n    }).isRequired\n  }).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\n\nexport default connect(\n  null,\n  { validateToken, resetPassword }\n)(ResetPasswordPage);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst UserRoute = ({ isAuthenticated, component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      isAuthenticated ? <Component {...props} /> : <Redirect to=\"/\" />\n    }\n  />\n);\n\nUserRoute.propTypes = {\n  component: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    isAuthenticated: !!state.user.token\n  };\n}\n\nexport default connect(mapStateToProps)(UserRoute);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst UserRoute = ({ isAuthenticated, component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      !isAuthenticated ? <Component {...props} /> : <Redirect to=\"/dashboard\" />\n    }\n  />\n);\n\nUserRoute.propTypes = {\n  component: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    isAuthenticated: !!state.user.token\n  };\n}\n\nexport default connect(mapStateToProps)(UserRoute);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Menu, Dropdown, Image } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport gravatarUrl from \"gravatar-url\";\nimport * as actions from \"../../actions/auth\";\n\nconst TopNavigation = ({ user, logout }) => (\n  <Menu secondary pointing>\n    <Menu.Item as={Link} to=\"/dashboard\">\n      Dashboard\n    </Menu.Item>\n    <Menu.Menu position=\"right\">\n      <Dropdown trigger={<Image avatar src={gravatarUrl(user.email)} />}>\n        <Dropdown.Menu>\n          <Dropdown.Item onClick={() => logout()}>Logout</Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n    </Menu.Menu>\n  </Menu>\n);\n\nTopNavigation.propTypes = {\n  user: PropTypes.shape({\n    email: PropTypes.string.isRequired\n  }).isRequired,\n  logout: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { logout: actions.logout }\n)(TopNavigation);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Route } from \"react-router-dom\";\nimport HomePage from \"./components/pages/HomePage\";\nimport LoginPage from \"./components/pages/LoginPage\";\nimport DashboardPage from \"./components/pages/DashboardPage\";\nimport SignupPage from \"./components/pages/SignupPage\";\nimport ConfirmationPage from \"./components/pages/ConfirmationPage\";\nimport ForgotPasswordPage from \"./components/pages/ForgotPasswordPage\";\nimport ResetPasswordPage from \"./components/pages/ResetPasswordPage\";\nimport UserRoute from \"./components/routes/UserRoute\";\nimport GuestRoute from \"./components/routes/GuestRoute\";\nimport TopNavigation from \"./components/nevigation/TopNavigation\";\n\nconst App = ({ location, isAuthenticated }) => (\n  <div>\n    {isAuthenticated && <TopNavigation />}\n    <Route location={location} path=\"/\" exact component={HomePage} />\n    <Route\n      location={location}\n      path=\"/confirmation/:token\"\n      exact\n      component={ConfirmationPage}\n    />\n    <GuestRoute location={location} path=\"/login\" exact component={LoginPage} />\n    <GuestRoute\n      location={location}\n      path=\"/signup\"\n      exact\n      component={SignupPage}\n    />\n    <GuestRoute\n      location={location}\n      path=\"/forgot_password\"\n      exact\n      component={ForgotPasswordPage}\n    />\n    <GuestRoute\n      location={location}\n      path=\"/reset_password/:token\"\n      exact\n      component={ResetPasswordPage}\n    />\n    <UserRoute\n      location={location}\n      path=\"/dashboard\"\n      exact\n      component={DashboardPage}\n    />\n  </div>\n);\n\nApp.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired\n  }).isRequired,\n  isAuthenticated: PropTypes.bool.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    isAuthenticated: !!state.user.email\n  };\n}\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from \"redux\";\n\nimport user from \"./reducers/user\";\n\nexport default combineReducers({\n  user\n});\n","import { USER_LOGGED_IN, USER_LOGGED_OUT } from \"../types\";\n\nexport default function user(state = {}, action = {}) {\n  switch (action.type) {\n    case USER_LOGGED_IN:\n      return action.user;\n    case USER_LOGGED_OUT:\n      return {};\n    default:\n      return state;\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport decode from \"jwt-decode\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport rootReducer from \"./rootReducer\";\nimport { userLoggedIn } from \"./actions/auth\";\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nif (localStorage.okrymusJWT) {\n  const payload = decode(localStorage.okrymusJWT);\n  const user = {\n    token: localStorage.okrymusJWT,\n    email: payload.email,\n    confirmed: payload.confirmed\n  };\n  store.dispatch(userLoggedIn(user));\n}\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <Route component={App} />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}